{"version":3,"sources":["components/phoneBook/phoneBook.css.jsx","components/phoneBook/contactForm/index.jsx","components/phoneBook/contactForm/contactForm.jsx","components/phoneBook/contactItem/index.jsx","components/phoneBook/contactItem/contactItem.jsx","components/phoneBook/contactsList/index.jsx","components/phoneBook/contactsList/contactsList.jsx","components/phoneBook/filter/index.jsx","components/phoneBook/filter/filter.jsx","components/phoneBook/index.jsx","components/phoneBook/phoneBook.jsx","App.js","utils/local-storage.js","reportWebVitals.js","index.js"],"names":["PhoneBookEl","styled","div","Form","form","Label","label","Input","input","ButtonDelete","button","Li","li","ContactForm","name","number","onInputChange","onSubmit","type","value","onChange","ContactItem","id","onDeleteContact","onClick","ContactsList","contacts","filter","listItems","contact","toLowerCase","includes","map","Filter","PhoneBook","state","event","target","setState","preventDefault","props","addContact","this","length","Component","App","undefined","find","uuidv4","alert","deleteContact","key","serializedState","localStorage","getItem","JSON","parse","err","console","error","loadKey","prevProps","prevState","stringify","setItem","saveKey","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec9e6c90.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst PhoneBookEl = styled.div`\r\n\tmargin-left: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n\tpadding: 10px;\r\n\twidth: 450px;\r\n\tborder: 1px solid black;\r\n`;\r\n\r\nconst Label = styled.label`\r\n\tdisplay: block;\r\n\tmargin-bottom: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\tdisplay: block;\r\n`;\r\n\r\nconst ButtonDelete = styled.button`\r\n\tmargin-left: 10px;\r\n`;\r\n\r\nconst Li = styled.li`\r\n\tmargin: 10px 0;\r\n`;\r\n\r\nexport { PhoneBookEl, Form, Label, Input, ButtonDelete, Li };","import ContactForm from './contactForm'\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport { Form, Label, Input } from '../phoneBook.css';\r\n\r\nconst ContactForm = ({ name, number, onInputChange, onSubmit }) => {\r\n\treturn (\r\n\t\t<Form onSubmit={onSubmit}>\r\n\t\t\t<Label>\r\n\t\t\t\tName\r\n\t\t\t\t<Input type=\"text\" name=\"name\" value={name} onChange={onInputChange}/>\r\n\t\t\t</Label>\r\n\r\n\t\t\t<Label>\r\n\t\t\t\tNumber\r\n\t\t\t\t<Input type=\"tel\" name=\"number\" value={number} onChange={onInputChange}/>\r\n\t\t\t</Label>\r\n\r\n\t\t\t<button type=\"submit\">Add contact</button>\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\nContactForm.propTypes = {\r\n\tname: PropTypes.string, \r\n\tnumber: PropTypes.string, \r\n\tonInputChange: PropTypes.func, \r\n\tonSubmit: PropTypes.func\r\n}\r\n\r\nexport default ContactForm;","import ContactItem from './contactItem';\r\nexport default ContactItem;","import PropTypes from 'prop-types';\r\nimport { ButtonDelete, Li } from '../phoneBook.css';\r\n\r\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\r\n\treturn (\r\n\t\t<Li>\r\n\t\t\t{name}: {number}\r\n\t\t\t<ButtonDelete type=\"button\" onClick={() => onDeleteContact(id)}>Delete</ButtonDelete>\r\n\t\t</Li>\t\t\r\n\t)\r\n}\r\n\r\nContactItem.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tnumber: PropTypes.string,\r\n\tonDeleteContact: PropTypes.func\r\n}\r\n\r\nexport default ContactItem;","import ContactsList from './contactsList';\r\n\r\nexport default ContactsList;","import PropTypes from 'prop-types';\r\nimport ContactItem from '../contactItem';\r\n\r\nconst ContactsList = ({ contacts, filter, onDeleteContact }) => {\r\n\tconst filteredContacts = contacts.filter(contact =>\r\n\t\tcontact.name.toLowerCase().includes(filter.toLowerCase()));\r\n\t\r\n\tconst listItems = filteredContacts.map(({ name, number, id }) => {\r\n\t\treturn (\r\n\t\t\t<ContactItem\r\n\t\t\t\tid={id}\r\n\t\t\t\tname={name}\r\n\t\t\t\tnumber={number}\r\n\t\t\t\tkey={id}\r\n\t\t\t\tonDeleteContact={onDeleteContact}\r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{listItems}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nContactsList.propTypes = {\r\n\tcontacts: PropTypes.arrayOf(PropTypes.shape({\r\n\t\tid: PropTypes.string.isRequired,\r\n\t\tname: PropTypes.string.isRequired,\r\n\t\tnumber: PropTypes.string.isRequired\r\n\t})), \r\n\tfilter: PropTypes.string\r\n}\r\n\r\nexport default ContactsList;","import Filter from './filter';\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport { Label, Input, } from '../phoneBook.css';\r\n\r\nconst Filter = ({ filter, onInputChange }) => {\r\n\treturn (\r\n\t\t<Label>\r\n\t\t\tFind contacts by name\r\n\t\t\t<Input type=\"text\" name=\"filter\" value={filter} onChange={onInputChange}/>\r\n\t\t</Label>\r\n\t)\r\n}\r\n\r\nFilter.propTypes = {\r\n\tfilter: PropTypes.string,\r\n\tonInputChange: PropTypes.func\r\n}\r\n\r\nexport default Filter;","import PhoneBook from './phoneBook'\r\nexport default PhoneBook;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { PhoneBookEl } from './phoneBook.css';\r\nimport ContactForm from './contactForm';\r\nimport ContactsList from './contactsList';\r\nimport Filter from './filter';\r\n\r\n\r\nclass PhoneBook extends Component {\r\n\t\r\n\tstatic propTypes = {\r\n\t\tname: PropTypes.string,\r\n\t\tnumber: PropTypes.string,\r\n\t}\r\n\r\n\tstate = {\r\n\t\tname: '',\r\n    number: ''\r\n\t}\r\n\r\n\tonInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\t\tthis.setState(\r\n      { [name]: value }\r\n    )\r\n\t}\r\n\r\n\tonSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst { name, number } = this.state;\r\n\t\tthis.props.addContact({ name, number });\t\r\n    this.setState({ name: '', number: '' });\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { contacts, filter, onInputChange, onDeleteContact } = this.props;\r\n\t\tconst { name, number, } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<PhoneBookEl>\r\n\t\t\t\t<h1>PhoneBook</h1>\r\n\t\t\t\t<ContactForm\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tnumber={number}\r\n\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\tonInputChange={this.onInputChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<h2>Contacts</h2>\r\n\t\t\t\t<Filter filter={filter} onInputChange={onInputChange}/>\r\n\t\t\t\t{contacts.length > 0 &&\r\n\t\t\t\t\t<ContactsList contacts={contacts} filter={filter} onDeleteContact={onDeleteContact} />}\r\n\t\t\t</PhoneBookEl>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n\taddContact: PropTypes.func,\r\n\tonInputChange: PropTypes.func\r\n}\r\n\r\nexport default PhoneBook;","import './App.css';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport PhoneBook from './components/phoneBook'\nimport { loadKey, saveKey } from './utils/local-storage';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string\n    })),\n    filter: PropTypes.string\n  }\n\n  state = {\n    contacts: [],\n    filter: ''\n  }\n\n  componentDidMount() { \n    const contacts = loadKey('contacts');\n    if (contacts) {\n      this.setState({ contacts: contacts });\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      saveKey('contacts', this.state.contacts);\n    }\n  };\n\n  onInputChange = (event) => {\n    const { name, value } = event.target;\n\t\tthis.setState(\n      { [name]: value }\n    )\n  }\n  \n  addContact = ({ name, number }) => {\n    const usedContactName = this.state.contacts.find(contact => contact.name === name);\n    if (usedContactName !== undefined) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number\n    }\n    \n    this.setState(state => {\n      return {\n        contacts: [...state.contacts, contact]\n      }\n    })\n  };\n\n  deleteContact = (id => {\n    this.setState(state => {\n      return {contacts: state.contacts.filter(contact => contact.id !== id)}\n    })\n  })\n\n  \n\n  render() {\n    const { contacts, name, number, filter } = this.state;\n\n    return (\n      <div className=\"App\">\n        <PhoneBook\n          name={name}\n          number={number}\n          addContact={this.addContact}\n          onInputChange={this.onInputChange}\n          contacts={contacts}\n          filter={filter}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","//Работа с localStorage\r\n// Принимает ключ `key` по которому будет произведена выборка.\r\nexport const loadKey = key => {\r\n  try {\r\n    const serializedState = localStorage.getItem(key);\r\n\r\n    return serializedState === null ? undefined : JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.error('Get state error: ', err);\r\n  }\r\n};\r\n\r\n// Принимает ключ `key` и значение `value`.\r\nexport const saveKey = (key, value) => {\r\n  try {\r\n    const serializedState = JSON.stringify(value);\r\n    localStorage.setItem(key, serializedState);\r\n  } catch (err) {\r\n    console.error('Set state error: ', err);\r\n  }\r\n};\r\n\r\n// Принимает ключ, который будет удален\r\nexport const deleteKey = (key) => {\r\n  try {\r\n    localStorage.removeItem(key);\r\n  } catch (err) {\r\n    console.error('Set state error: ', err);\r\n  }\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}